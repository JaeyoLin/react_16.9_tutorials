{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","components/UseReducer.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","value","length","err","TypeError","_defineProperty","obj","key","Object","defineProperty","enumerable","configurable","writable","ACTION_TYPE","initState","todos","reducer","state","action","type","concat","splice","UseReducer","useReducer","dispatch","onClick","map","todo","index"],"mappings":"uIAGe,SAASA,EAAeC,EAAKC,GAC1C,OCJa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDGxB,CAAeA,IEJT,SAA+BA,EAAKC,GACjD,IAAIG,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKV,EAAIW,OAAOC,cAAmBP,GAAMI,EAAKC,EAAGG,QAAQC,QAChEV,EAAKW,KAAKN,EAAGO,QAETf,GAAKG,EAAKa,SAAWhB,GAH8CI,GAAK,IAK9E,MAAOa,GACPZ,GAAK,EACLC,EAAKW,EACL,QACA,IACOb,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,EFnBuB,CAAqBJ,EAAKC,IGJ3C,WACb,MAAM,IAAIkB,UAAU,wDHG0C,GAJhE,iC,gCIAe,SAASC,EAAgBC,EAAKC,EAAKN,GAYhD,OAXIM,KAAOD,EACTE,OAAOC,eAAeH,EAAKC,EAAK,CAC9BN,MAAOA,EACPS,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZN,EAAIC,GAAON,EAGNK,EAZT,iC,8nBCEA,IAAMO,EACQ,WADRA,EAEW,cAGXC,EAAY,CAChBC,MAAO,IAGHC,EAAU,SAACC,EAAOC,GACtB,OAAQA,EAAOC,MACb,KAAKN,EACH,OAAO,EAAP,GACKI,EADL,CAEEF,MAAOE,EAAMF,MAAMK,OAAO,SAE9B,KAAKP,EAEH,OADEI,EAAMF,MAAMM,OAAO,EAAG,GACjB,EAAP,GACKJ,GAEP,QACE,OAAOA,IA0BEK,UAtBI,WAAO,IAAD,EACGC,qBAAWP,EAASF,GADvB,mBAChBG,EADgB,KACTO,EADS,KAWvB,OACE,6BACE,4BAAQC,QAVM,WAChBD,EAAS,CAAEL,KAAMN,MASf,OACA,4BAAQY,QAPS,WACnBD,EAAS,CAAEL,KAAMN,MAMf,UAEEI,EAAMF,MAAMW,IAAI,SAACC,EAAMC,GAAP,OAAiB,uCAASA,EAAQ,EAAjB,aAAuBD","file":"static/js/4.a02acfde.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import React, { useReducer } from 'react';\n\nconst ACTION_TYPE = {\n  'ADD_TODO': 'ADD_TODO',\n  'REMOVE_TODO': 'REMOVE_TODO',\n};\n\nconst initState = {\n  todos: [],\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case ACTION_TYPE.ADD_TODO:\n      return {\n        ...state,\n        todos: state.todos.concat('eat'),\n      }\n    case ACTION_TYPE.REMOVE_TODO:\n        state.todos.splice(0, 1);\n      return {\n        ...state,\n      }\n    default:\n      return state;\n  }\n};\n\nconst UseReducer = () => {\n  const [state, dispatch] = useReducer(reducer, initState);\n\n  const handleAdd = () => {\n    dispatch({ type: ACTION_TYPE.ADD_TODO });\n  }\n\n  const handleRemove = () => {\n    dispatch({ type: ACTION_TYPE.REMOVE_TODO });\n  }\n\n  return (\n    <div>\n      <button onClick={handleAdd}>Add</button>\n      <button onClick={handleRemove}>Remove</button>\n      {\n        state.todos.map((todo, index) => <div>{`${index + 1}: ${todo}`}</div>)\n      }\n    </div>\n  );\n}\n\nexport default UseReducer;\n"],"sourceRoot":""}
{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/UseMomo.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","value","length","err","TypeError","UseMomo","useState","count","setCount","text","setText","compute","useMemo","console","log","onClick","onChange","e","target"],"mappings":"wIAGe,SAASA,EAAeC,EAAKC,GAC1C,OCJa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDGxB,CAAeA,IEJT,SAA+BA,EAAKC,GACjD,IAAIG,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKV,EAAIW,OAAOC,cAAmBP,GAAMI,EAAKC,EAAGG,QAAQC,QAChEV,EAAKW,KAAKN,EAAGO,QAETf,GAAKG,EAAKa,SAAWhB,GAH8CI,GAAK,IAK9E,MAAOa,GACPZ,GAAK,EACLC,EAAKW,EACL,QACA,IACOb,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,EFnBuB,CAAqBJ,EAAKC,IGJ3C,WACb,MAAM,IAAIkB,UAAU,wDHG0C,GAJhE,iC,mEI0BeC,UAxBC,WAAO,IAAD,EACMC,mBAAS,GADf,mBACbC,EADa,KACNC,EADM,OAEIF,mBAAS,IAFb,mBAEbG,EAFa,KAEPC,EAFO,KAIdC,EAAUC,kBAAQ,WAEtB,OADAC,QAAQC,IAAI,WACLP,EAAQA,GACd,CAACA,IAMJ,OACE,6BACE,4CAAcA,IACd,mDAAqBI,IACrB,4BAAQI,QARC,WACXP,EAASD,EAAQ,KAOf,KACA,2CAAaE,IACb,2BAAOR,MAAOQ,EAAMO,SAAU,SAACC,GAAD,OAAOP,EAAQO,EAAEC,OAAOjB","file":"static/js/10.bd617f04.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React, { useState, useMemo } from 'react';\n\nconst UseMomo = () => {\n  const [count, setCount] = useState(0);\n  const [text, setText] = useState('');\n\n  const compute = useMemo(() => {\n    console.log('compute');\n    return count * count;\n  }, [count])\n\n  const plus = () => {\n    setCount(count + 1);\n  }\n\n  return (\n    <div>\n      <p>{`Count: ${count}`}</p>\n      <p>{`Count Square: ${compute}`}</p>\n      <button onClick={plus}>+</button>\n      <p>{`Text: ${text}`}</p>\n      <input value={text} onChange={(e) => setText(e.target.value)} />\n    </div>\n  );\n}\n\nexport default UseMomo;\n"],"sourceRoot":""}
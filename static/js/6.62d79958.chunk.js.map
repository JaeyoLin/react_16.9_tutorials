{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/UseCallback.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","value","length","err","TypeError","Button","React","memo","handleClick","text","refCount","useRef","console","log","onClick","className","current","UseCallback","useState","numA","setNumA","handlePlusAClick","useCallback","prevNumA","handleMinusAClick","numB","setNumB","handlePlusBClick","prevNumB","handleMinusBClick","result","setResult","handleAPlusB","handleAMinusB"],"mappings":"uIAGe,SAASA,EAAeC,EAAKC,GAC1C,OCJa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDGxB,CAAeA,IEJT,SAA+BA,EAAKC,GACjD,IAAIG,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKV,EAAIW,OAAOC,cAAmBP,GAAMI,EAAKC,EAAGG,QAAQC,QAChEV,EAAKW,KAAKN,EAAGO,QAETf,GAAKG,EAAKa,SAAWhB,GAH8CI,GAAK,IAK9E,MAAOa,GACPZ,GAAK,EACLC,EAAKW,EACL,QACA,IACOb,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,EFnBuB,CAAqBJ,EAAKC,IGJ3C,WACb,MAAM,IAAIkB,UAAU,wDHG0C,GAJhE,iC,mEIQMC,EAASC,IAAMC,KAAK,YAA4B,IAAzBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KAClCC,EAAWC,iBAAO,GAExB,OADAC,QAAQC,IAAI,iBAEV,4BACEC,QAASN,GADX,UAGMC,GACJ,0BAAMM,UAAW,eAAjB,qBACqBL,EAASM,cA4CrBC,UAtCK,WAAO,IAAD,EACAC,mBAAS,GADT,mBACjBC,EADiB,KACXC,EADW,KAElBC,EAAmBC,sBACvB,kBAAMF,EAAQ,SAAAG,GAAQ,OAAIA,EAAW,KACrC,IAEIC,EAAoBF,sBACxB,kBAAMF,EAAQ,SAAAG,GAAQ,OAAIA,EAAW,KACrC,IARsB,EAUAL,mBAAS,GAVT,mBAUjBO,EAViB,KAUXC,EAVW,KAWlBC,EAAmBL,sBACvB,kBAAMI,EAAQ,SAAAE,GAAQ,OAAIA,EAAW,KACrC,IAEIC,EAAoBP,sBACxB,kBAAMI,EAAQ,SAAAE,GAAQ,OAAIA,EAAW,KACrC,IAjBsB,EAmBIV,mBAAS,MAnBb,mBAmBjBY,EAnBiB,KAmBTC,EAnBS,KAoBlBC,EAAeV,sBAAY,kBAAMS,EAAUZ,EAAOM,IAAO,CAACN,EAAMM,IAChEQ,EAAgBX,sBAAY,kBAAMS,EAAUZ,EAAOM,IAAO,CAACN,EAAMM,IAEvE,OACE,yBAAKV,UAAU,OACb,yBAAKA,UAAU,OAAf,SAA4BI,GAC5B,kBAACd,EAAD,CAAQI,KAAM,IAAKD,YAAaa,IAChC,kBAAChB,EAAD,CAAQI,KAAM,IAAKD,YAAagB,IAChC,yBAAKT,UAAU,OAAf,SAA4BU,GAC5B,kBAACpB,EAAD,CAAQI,KAAM,IAAKD,YAAamB,IAChC,kBAACtB,EAAD,CAAQI,KAAM,IAAKD,YAAaqB,IAChC,yBAAKd,UAAU,OAAf,WAA8Be,GAC9B,kBAACzB,EAAD,CAAQI,KAAM,QAASD,YAAawB,IACpC,kBAAC3B,EAAD,CAAQI,KAAM,QAASD,YAAayB","file":"static/js/6.62d79958.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React, {\n  useState,\n  useCallback,\n  useRef,\n} from 'react';\n\n// import './styles.css';\n\nconst Button = React.memo(({ handleClick, text }) => {\n  const refCount = useRef(0);\n  console.log('Button render');\n  return (\n    <button\n      onClick={handleClick}\n    >\n      {`${text}`}\n      <span className={\"renderCount\"}>\n        self render count {refCount.current++}\n      </span>\n    </button>\n  );\n});\n\nconst UseCallback = () => {\n  const [numA, setNumA] = useState(0);\n  const handlePlusAClick = useCallback(\n    () => setNumA(prevNumA => prevNumA + 1),\n    []\n  );\n  const handleMinusAClick = useCallback(\n    () => setNumA(prevNumA => prevNumA - 1),\n    []\n  );\n  const [numB, setNumB] = useState(0);\n  const handlePlusBClick = useCallback(\n    () => setNumB(prevNumB => prevNumB + 1),\n    []\n  );\n  const handleMinusBClick = useCallback(\n    () => setNumB(prevNumB => prevNumB - 1),\n    []\n  );\n  const [result, setResult] = useState(null);\n  const handleAPlusB = useCallback(() => setResult(numA + numB), [numA, numB]);\n  const handleAMinusB = useCallback(() => setResult(numA - numB), [numA, numB]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"num\">NumA: {numA}</div>\n      <Button text={\"+\"} handleClick={handlePlusAClick} />\n      <Button text={\"-\"} handleClick={handleMinusAClick} />\n      <div className=\"num\">NumB: {numB}</div>\n      <Button text={\"+\"} handleClick={handlePlusBClick} />\n      <Button text={\"-\"} handleClick={handleMinusBClick} />\n      <div className=\"num\">Result: {result}</div>\n      <Button text={\"A + B\"} handleClick={handleAPlusB} />\n      <Button text={\"A - B\"} handleClick={handleAMinusB} />\n    </div>\n  );\n}\n\nexport default UseCallback;\n"],"sourceRoot":""}